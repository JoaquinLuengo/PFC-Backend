security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email #username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            # provider that you set earlier inside providers
            provider: app_user_provider
            json_login:
                check_path: app_login #app_api_login
                username_path: email
                password_path: password
         #   logout:  //A esto lo tuve que comentar pq sino, no borraba el token
         #       path: app_logout
            access_token:
                token_handler: App\Security\ApiTokenHandler


        #login:

            #pattern: ^/api/login
            #stateless: true
            #json_login:
            #    check_path: api_login
               # username_path: username
               # password_path: password
               # check_path: /api/login_check # or api_login_check as defined in config/routes.yaml
               # success_handler: lexik_jwt_authentication.handler.authentication_success
               # failure_handler: lexik_jwt_authentication.handler.authentication_failure

     #  api:
      #      pattern: ^/api
        #    stateless: true
        #    provider: app_user_provider
        #    jwt: ~

   # access_control:
            #    - { path: ^/login, roles: PUBLIC_ACCESS } # Allows accessing the Swagger UI PUBLIC_ACCESS
            #- { path: ^/logout, roles: [IS_AUTHENTICATED_FULLY,ROLE_ADMIN] }
            #- { path: ^/api, roles: [IS_AUTHENTICATED_FULLY,ROLE_ADMIN] } # Allows accessing the Swagger UI
            #- { path: ^/docs, roles: [IS_AUTHENTICATED_FULLY,ROLE_ADMIN]} # Allows accessing the Swagger UI docs
            #  - { path: ^/docs.jsonld, roles: [IS_AUTHENTICATED_FULLY,ROLE_ADMIN] } # Allows accessing the Swagger UI docs
            #- { path: ^/obtener-datos-de-api, roles: [IS_AUTHENTICATED_FULLY,ROLE_ADMIN]}
            # - { path: ^/ping, roles:[IS_AUTHENTICATED_FULLY,ROLE_ADMIN] }
        #- { path: ^/, roles: IS_AUTHENTICATED_FULLY } IS_AUTHENTICATED_FULLY
    access_control:
        - { path: ^/login, roles: PUBLIC_ACCESS } # Allows accessing the Swagger UI PUBLIC_ACCESS
        - { path: ^/logout, roles: [ IS_AUTHENTICATED_FULLY,ROLE_ADMIN ] }
        - { path: ^/api, roles: PUBLIC_ACCESS  } # Allows accessing the Swagger UI
        - { path: ^/docs, roles: [ IS_AUTHENTICATED_FULLY,ROLE_ADMIN ] } # Allows accessing the Swagger UI docs
        - { path: ^/docs.jsonld, roles: [ IS_AUTHENTICATED_FULLY,ROLE_ADMIN ] } # Allows accessing the Swagger UI docs
        - { path: ^/obtener-datos-de-api, roles: [ IS_AUTHENTICATED_FULLY,ROLE_ADMIN ] }
        - { path: ^/obtener-equipo, roles: PUBLIC_ACCESS  }
        - { path: ^/ping, roles: [ IS_AUTHENTICATED_FULLY,ROLE_ADMIN ] }
        - { path: ^/alert, roles: [ IS_AUTHENTICATED_FULLY,ROLE_ADMIN ] }
        - { path: ^/eliminar-agente, roles: [ IS_AUTHENTICATED_FULLY,ROLE_ADMIN ] }
        - { path: ^/agregar-agente, roles: [ IS_AUTHENTICATED_FULLY,ROLE_ADMIN ] }
        - { path: ^/actualizar-agente, roles: [ IS_AUTHENTICATED_FULLY,ROLE_ADMIN ] }
        - { path: ^/eliminar-switch, roles: [ IS_AUTHENTICATED_FULLY,ROLE_ADMIN ] }
        - { path: ^/agregar-switch, roles: [ IS_AUTHENTICATED_FULLY,ROLE_ADMIN ] }
        - { path: ^/actualizar-switch, roles: [ IS_AUTHENTICATED_FULLY,ROLE_ADMIN ] }
        - { path: ^/ip-conflictivas, roles: [ IS_AUTHENTICATED_FULLY,ROLE_ADMIN ] }
        - { path: ^/estadisticas, roles: [ IS_AUTHENTICATED_FULLY,ROLE_ADMIN ] }
        - { path: ^/eliminar-ipadress, roles: [ IS_AUTHENTICATED_FULLY,ROLE_ADMIN ]   }
        - { path: ^/eliminar-sector, roles: [ IS_AUTHENTICATED_FULLY,ROLE_ADMIN ]   }
        -  { path: ^/agente-equipo, roles: PUBLIC_ACCESS    }
        - { path: ^/, roles: IS_AUTHENTICATED_FULLY } IS_AUTHENTICATED_FULLY

#when@test:
#    security:
#        password_hashers:
#            # By default, password hashers are resource intensive and take time. This is
#            # important to generate secure password hashes. In tests however, secure hashes
#            # are not important, waste resources and increase test times. The following
#            # reduces the work factor to the lowest possible values.
#            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
#                algorithm: auto
#                cost: 4 # Lowest possible value for bcrypt
#                time_cost: 3 # Lowest possible value for argon
#                memory_cost: 10 # Lowest possible value for argon
